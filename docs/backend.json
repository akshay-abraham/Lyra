{
  "entities": {
    "ChatSession": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ChatSession",
      "type": "object",
      "description": "Represents a chat session between a student and the AI tutor.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the chat session."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who started the chat session. (Relationship: User 1:N ChatSession)"
        },
        "subject": {
          "type": "string",
          "description": "The subject of the chat session (e.g., Math, Coding, Essay Writing)."
        },
        "title": {
          "type": "string",
          "description": "A title for the chat session, generated by the AI."
        },
        "startTime": {
          "type": "string",
          "description": "The date and time when the chat session started.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "The date and time when the chat session ended. Can be null if the session is still active.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "subject",
        "title",
        "startTime"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Lyra application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/chatSessions/{chatSessionId}",
        "definition": {
          "entityName": "ChatSession",
          "schema": {
            "$ref": "#/backend/entities/ChatSession"
          },
          "description": "Stores chat sessions for each user. Includes denormalized 'userId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "chatSessionId",
              "description": "The unique identifier for the chat session."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to efficiently store and retrieve user chat sessions while ensuring data ownership and security. It leverages path-based ownership for chat sessions, nesting chat sessions under each user's document. This allows for easy retrieval of a user's chat sessions and simplifies security rules based on user identity. This structure enables secure `list` operations because we are using hierarchical paths for user-owned data. The `userId` within the ChatSession entity is redundant but crucial for authorization independence. By denormalizing this `userId`, we can enforce security rules without needing to perform costly `get()` operations to verify ownership, thus guaranteeing DBAC."
  }
}