
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User Profile",
      "type": "object",
      "description": "Represents a user of the Lyra application, who can be either a student or a teacher.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The unique Firebase Authentication user ID."
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "The user's role in the application.",
          "enum": ["student", "teacher"]
        },
        "grade": {
          "type": "string",
          "description": "The grade level of the student (optional)."
        }
      },
      "required": ["uid", "name", "email", "role"]
    },
    "Prompt": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Prompt",
      "type": "object",
      "description": "Represents a prompt used to guide the AI tutor.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Prompt entity."
        },
        "systemInstructions": {
          "type": "string",
          "description": "Instructions that define the AI's role (e.g., tutor, coding assistant)."
        },
        "userInstructions": {
          "type": "string",
          "description": "The actual question or problem from the student."
        },
        "domain": {
          "type": "string",
          "description": "The specific subject area (e.g., math, coding, essays)."
        },
        "guidanceLevel": {
          "type": "string",
          "description": "Defines the amount of guidance the AI gives (more hints, more direct explanations, etc.)."
        },
        "exampleAnswers": {
          "type": "array",
          "description": "Examples of good answers to guide the AI's response generation (few-shot prompting).",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string",
          "description": "Reference to the UserProfile. (Relationship: UserProfile 1:N Prompt). The user (teacher) who created or customized the prompt."
        }
      },
      "required": [
        "id",
        "systemInstructions",
        "userInstructions",
        "domain",
        "guidanceLevel",
        "userId"
      ]
    }
  },
  "auth": {
    "providers": [
      "password"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profiles. Each document is uniquely identified by the user's Firebase Auth UID.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase Auth UID of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/prompts/{promptId}",
        "definition": {
          "entityName": "Prompt",
          "schema": {
            "$ref": "#/backend/entities/Prompt"
          },
          "description": "Stores prompts created by teachers. Includes denormalized 'userId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase Auth UID of the teacher who owns the prompt."
            },
            {
              "name": "promptId",
              "description": "Unique identifier for the prompt."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support the Lyra application, focusing on ethical AI tutoring. It prioritizes authorization independence and simplifies security rules using denormalization. The structure enables teachers to create and customize prompts that guide the AI's tutoring style. Since users log in with Firebase Authentication, all data will be secured by `request.auth.uid`. \n\nThe structure is segregated to ensure each collection has a homogeneous security posture.  Specifically, prompts are stored under the teacher's ID to ensure that prompts are isolated between teachers and that list operations are safe. This prevents unauthorized access and maintains data integrity.\n\nAuthorization Independence is achieved by storing the `teacherId` within the prompt document, eliminating the need for `get()` calls to verify ownership.\n\nQAPs are supported by the path-based ownership model for the prompts. Only the teacher associated with a prompt (via `teacherId`) can access or modify it."
  }
}
