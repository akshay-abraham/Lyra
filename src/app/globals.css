/*
  This is the main global stylesheet for the entire application.
  It works in layers, similar to how layers are used in image editing software.

  1. `@tailwind base`: This brings in Tailwind CSS's foundational styles.
     It's a "reset" stylesheet that makes browsers render elements more consistently.
     For example, it removes default margins from many elements.

  2. `@tailwind components`: This layer is for component-specific styles.
     Tailwind can inject styles for pre-built components here.

  3. `@tailwind utilities`: This is the most important layer. It brings in all of
     Tailwind's utility classes like `p-4` (padding), `flex` (flexbox), `text-white`, etc.

  Think of it as setting up the "standard library" of styles for the project.
*/
@tailwind base;
@tailwind components;
@tailwind utilities;

/*
  The `@layer base` directive allows us to add our own custom base styles.
  It's like defining global variables or default styles for HTML tags.
*/
@layer base {
  /*
    The `:root` selector targets the root element of the document (the `<html>` tag).
    This is where we define our CSS Custom Properties (variables) for our color theme.
    This is the "light mode" theme.

    C-like Analogy:
    Think of these as global constants defined with `#define` in C.
    For example: `#define BACKGROUND_COLOR "0 0% 100%"`
    These variables can then be reused throughout the CSS.

    The values are in HSL (Hue, Saturation, Lightness) format without the `hsl()` part.
    This is a requirement for how ShadCN UI (our component library) works.
    For example, `background: 0 0% 100%` corresponds to `hsl(0, 0%, 100%)`, which is white.
  */
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%; /* Text color */
    --card: 0 0% 100%;
    --card-foreground: 222.2 47.4% 11.2%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 47.4% 11.2%;
    --primary: 262.1 83.3% 57.8%; /* Main brand color (purple) */
    --primary-foreground: 210 40% 98%; /* Text on top of primary color */
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%; /* Less important text */
    --accent: 34.9 91.4% 58.2%; /* Secondary brand color (orange) */
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%; /* Color for errors or danger (red) */
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%; /* Default border color */
    --input: 214.3 31.8% 91.4%; /* Input field background */
    --ring: 262.1 83.3% 57.8%; /* Color for focus rings */
    --chart-1: 210 40% 98%;
    --chart-2: 150 40% 98%;
    --chart-3: 30 40% 98%;
    --chart-4: 270 40% 98%;
    --chart-5: 330 40% 98%;
    --radius: 0.75rem; /* Default border radius for rounded corners */

    /* Custom variables for the sidebar component */
    --sidebar-background: 0 0% 100%;
    --sidebar-foreground: 222.2 47.4% 11.2%;
    --sidebar-primary: 262.1 83.3% 57.8%;
    --sidebar-primary-foreground: 210 40% 98%;
    --sidebar-accent: 210 40% 96.1%;
    --sidebar-accent-foreground: 222.2 47.4% 11.2%;
    --sidebar-border: 214.3 31.8% 91.4%;
    --sidebar-ring: 262.1 83.3% 57.8%;
  }

  /*
    This block defines the "dark mode" theme.
    When the `<html>` tag has the class "dark" (`<html class="dark">`),
    these variables will override the default `:root` variables.
  */
  .dark {
    --background: 224 71% 4%;
    --foreground: 210 40% 98%;
    --card: 224 71% 10%;
    --card-foreground: 210 40% 98%;
    --popover: 224 71% 4%;
    --popover-foreground: 210 40% 98%;
    --primary: 262.1 83.3% 57.8%;
    --primary-foreground: 210 20% 98%;
    --secondary: 215 28% 17%;
    --secondary-foreground: 210 40% 98%;
    --muted: 215 28% 17%;
    --muted-foreground: 215 20% 65%;
    --accent: 34.9 91.4% 58.2%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;
    --border: 215 28% 17%;
    --input: 215 28% 17%;
    --ring: 262.1 83.3% 57.8%;
    --chart-1: 210 40% 98%;
    --chart-2: 150 40% 98%;
    --chart-3: 30 40% 98%;
    --chart-4: 270 40% 98%;
    --chart-5: 330 40% 98%;

    --sidebar-background: 224 71% 6%;
    --sidebar-foreground: 210 40% 98%;
    --sidebar-primary: 262.1 83.3% 57.8%;
    --sidebar-primary-foreground: 210 20% 98%;
    --sidebar-accent: 215 28% 12%;
    --sidebar-accent-foreground: 210 40% 98%;
    --sidebar-border: 215 28% 17%;
    --sidebar-ring: 262.1 83.3% 57.8%;
  }
}

/*
  This is another `@layer base` block. You can have multiple.
  Here, we're defining some truly global styles.
*/
@layer base {
  /*
    The `*` is a universal selector. It applies these styles to EVERY element.
    Here, we're making every element's border color default to our `--border` variable.
    The `@apply` directive is a Tailwind feature that lets you use utility classes
    inside your CSS.
  */
  * {
    @apply border-border;
  }
  /*
    This applies default background and text colors to the entire `<body>` of the page.
    It uses the CSS variables we defined above, so it will automatically adapt to
    light or dark mode.
  */
  body {
    @apply bg-background text-foreground;
  }

  /*
    This defines a custom animation called `glow`.
    `@keyframes` is standard CSS for creating animations.
    This animation creates a pulsing shadow effect using the primary theme color.
  */
  @keyframes glow {
    0%, 100% { box-shadow: 0 0 5px hsl(var(--primary) / 0.2); }
    50% { box-shadow: 0 0 20px hsl(var(--primary) / 0.5); }
  }
  /*
    This creates a utility class `.animate-glow` that we can add to any element
    to apply our custom `glow` animation.
  */
  .animate-glow {
    animation: glow 3s ease-in-out infinite;
  }

  /*
    Another custom animation. This one cycles the border color of an element
    through a series of bright, gradient-like colors.
  */
  @keyframes colorful-border {
    0% { border-color: hsl(262, 83%, 58%); }
    25% { border-color: hsl(310, 83%, 58%); }
    50% { border-color: hsl(34, 91%, 58%); }
    75% { border-color: hsl(180, 83%, 58%); }
    100% { border-color: hsl(262, 83%, 58%); }
  }

  /*
    A utility class to apply the colorful border animation.
  */
  .animate-colorful-border {
      border-width: 1px;
      border-style: solid;
      animation: colorful-border 5s linear infinite;
  }

  /*
    A utility class to create gradient-colored text.
    It applies a background gradient and then "clips" the background to the text,
    making the text itself appear to be a gradient.
  */
  .gradient-text {
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent)), hsl(310, 83%, 58%));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: gradient-animation 4s ease infinite;
  }

  /* The animation that makes the text gradient shift over time. */
  @keyframes gradient-animation {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
}
